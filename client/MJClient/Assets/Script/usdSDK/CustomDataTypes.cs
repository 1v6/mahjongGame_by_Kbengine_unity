/*
	Generated by KBEngine!
	Please do not modify this file!
	tools = kbcmd
*/

namespace KBEngine
{
	using UnityEngine;
	using System;
	using System.Collections;
	using System.Collections.Generic;



	public class DATATYPE_MJ_LIST : DATATYPE_BASE
	{
		public MJ_LIST createFromStreamEx(MemoryStream stream)
		{
			UInt32 size = stream.readUint32();
			MJ_LIST datas = new MJ_LIST();

			while(size > 0)
			{
				--size;
				datas.Add(stream.readInt8());
			};

			return datas;
		}

		public void addToStreamEx(Bundle stream, MJ_LIST v)
		{
			stream.writeUint32((UInt32)v.Count);
			for(int i=0; i<v.Count; ++i)
			{
				stream.writeInt8(v[i]);
			};
		}
	}



	public class DATATYPE_ENTITY_LIST : DATATYPE_BASE
	{
		public ENTITY_LIST createFromStreamEx(MemoryStream stream)
		{
			UInt32 size = stream.readUint32();
			ENTITY_LIST datas = new ENTITY_LIST();

			while(size > 0)
			{
				--size;
				datas.Add(stream.readPython());
			};

			return datas;
		}

		public void addToStreamEx(Bundle stream, ENTITY_LIST v)
		{
			stream.writeUint32((UInt32)v.Count);
			for(int i=0; i<v.Count; ++i)
			{
				stream.writePython(v[i]);
			};
		}
	}



	public class DATATYPE_PLAYER_PUBLIC_INFO : DATATYPE_BASE
	{
		public PLAYER_PUBLIC_INFO createFromStreamEx(MemoryStream stream)
		{
			PLAYER_PUBLIC_INFO datas = new PLAYER_PUBLIC_INFO();
			datas.userId = stream.readUint32();
			datas.holdsCount = stream.readInt8();
			return datas;
		}

		public void addToStreamEx(Bundle stream, PLAYER_PUBLIC_INFO v)
		{
			stream.writeUint32(v.userId);
			stream.writeInt8(v.holdsCount);
		}
	}



	public class DATATYPE_PLAYERINFO_LIST : DATATYPE_BASE
	{
		private DATATYPE_PLAYER_PUBLIC_INFO itemType = new DATATYPE_PLAYER_PUBLIC_INFO();

		public PLAYERINFO_LIST createFromStreamEx(MemoryStream stream)
		{
			UInt32 size = stream.readUint32();
			PLAYERINFO_LIST datas = new PLAYERINFO_LIST();

			while(size > 0)
			{
				--size;
				datas.Add(itemType.createFromStreamEx(stream));
			};

			return datas;
		}

		public void addToStreamEx(Bundle stream, PLAYERINFO_LIST v)
		{
			stream.writeUint32((UInt32)v.Count);
			for(int i=0; i<v.Count; ++i)
			{
				itemType.addToStreamEx(stream, v[i]);
			};
		}
	}



	public class DATATYPE_ROOM_PUBLIC_INFO : DATATYPE_BASE
	{
		private DATATYPE_PLAYERINFO_LIST playerInfo_DataType = new DATATYPE_PLAYERINFO_LIST();

		public ROOM_PUBLIC_INFO createFromStreamEx(MemoryStream stream)
		{
			ROOM_PUBLIC_INFO datas = new ROOM_PUBLIC_INFO();
			datas.state = stream.readUnicode();
			datas.playerInfo = playerInfo_DataType.createFromStreamEx(stream);
			datas.button = stream.readInt8();
			datas.turn = stream.readInt8();
			return datas;
		}

		public void addToStreamEx(Bundle stream, ROOM_PUBLIC_INFO v)
		{
			stream.writeUnicode(v.state);
			playerInfo_DataType.addToStreamEx(stream, v.playerInfo);
			stream.writeInt8(v.button);
			stream.writeInt8(v.turn);
		}
	}



	public class DATATYPE_PLAYER_ACTION_DIC : DATATYPE_BASE
	{
		private DATATYPE_MJ_LIST gangpai_DataType = new DATATYPE_MJ_LIST();

		public PLAYER_ACTION_DIC createFromStreamEx(MemoryStream stream)
		{
			PLAYER_ACTION_DIC datas = new PLAYER_ACTION_DIC();
			datas.pai = stream.readInt8();
			datas.hu = stream.readUint8();
			datas.peng = stream.readUint8();
			datas.gang = stream.readUint8();
			datas.gangpai = gangpai_DataType.createFromStreamEx(stream);
			return datas;
		}

		public void addToStreamEx(Bundle stream, PLAYER_ACTION_DIC v)
		{
			stream.writeInt8(v.pai);
			stream.writeUint8(v.hu);
			stream.writeUint8(v.peng);
			stream.writeUint8(v.gang);
			gangpai_DataType.addToStreamEx(stream, v.gangpai);
		}
	}


}